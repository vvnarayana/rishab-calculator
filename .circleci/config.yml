version: 2.1
executors:
 python-executor:
   docker:
     - image: cimg/python:3.9.9
orbs:
 python: circleci/python@2.1.1
 aws-cli: circleci/aws-cli@2.0.3
 browser-tools: circleci/browser-tools@1.4.8
 jira: circleci/jira@2.1.0
 compass: atlassian-labs/compass@0.1.3
 ms-teams: opub/ms-teams-orb@1.0.3

jobs:
 builds:
   working_directory: ~/Flask-calculator
   executor: python-executor
   steps:
     - checkout
     - run:
         name: Install dependencies
         command: pip install -r requirements.txt
     - run:
         name: Build Script
         command: |
           pwd
           chmod 777 build.sh
           ls -la
           ./build.sh
           pwd
           ls -la
     - run:
         name: Python Version
         command: python3 --version
     - run:
         name: Run Pytest Unit Tests
         command: |
           python -m venv venv
           . venv/bin/activate
           pip install --upgrade pip
           pip install -r requirements.txt
           mkdir -p test-results/pytest
           
           # Run pytest unit tests
           pytest --junitxml=test-results/pytest/junit.xml tests/
     - store_test_results:
         path: test-results
     - run:
         name: Artifact Archiving
         command: |
           pwd
           chmod 777 artifact.sh
           ls -la
           ./artifact.sh
     - store_artifacts:
         path: ~/Flask-calculator/Flask-calculator.zip
         destination: Flask-calculator.zip
     - jira/notify:
         pipeline_id: <<pipeline.id>>
         pipeline_number: <<pipeline.number>>
     - ms-teams/report:
         only_on_fail: false
         webhook_url: $TEAMS_WEBHOOK_URL
         message: "Build step completed. Status: ${CIRCLE_JOB}"

 deploy:
   working_directory: ~/Flask-calculator
   docker:
     - image: cimg/azure:2023.09
   steps:
     - checkout
     - run:
         name: Azure Environment Setup
         command: |
           cat /etc/os-release
           sudo mkdir -p /var/lib/apt/lists/partial
           sudo chmod 755 /var/lib/apt/lists/partial
           sudo rm /etc/apt/sources.list.d/kubernetes.list
           sudo apt-get update
     - run:
         name: Azure App Service Deploy
         command: |
           pwd
           chmod 777 artifact.sh
           ls -la
           ./artifact.sh
           pwd
           ls -lrth
           curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
           az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
           az account set --subscription $AZURE_SUBSCRIPTION_ID
           az webapp deployment source config-zip -g $AZURE_RG_NAME -n $AZURE_WEBAPP_NAME --src *.zip
           az webapp up -n $AZURE_WEBAPP_NAME -g $AZURE_RG_NAME
     - jira/notify:
         job_type: deployment
         environment_type: production
         environment: ${CIRCLE_JOB}
         pipeline_id: << pipeline.id >>
         pipeline_number: << pipeline.number >>
     - compass/notify_deployment:
         environment_type: production
     - ms-teams/report:
         only_on_fail: false
         webhook_url: $TEAMS_WEBHOOK_URL
         message: "Deploy step completed. Status: ${CIRCLE_JOB}"

 run_tests:
    working_directory: ~/Flask-calculator
    docker:
      - image: "cimg/python:3.9.9-browsers"
    steps: 
      - checkout 
      - python/install-packages: 
          pkg-manager: pip
      - aws-cli/setup
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - run:
          name: List directory contents
          command: |
            pwd
            ls -la
      - run:
          name: Run Selenium Tests
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            mkdir -p test-results/selenium
            
            # Run Selenium tests
            cd /home/circleci/Flask-calculator/tests
            python selenium_driver_code.py
            
            # Verify Selenium results file was created
            if [ ! -f test-results/selenium/selenium_results.xml ]; then
              echo "Selenium results file not found. This may indicate a problem with the test execution."
              echo "rollback" > ~/test_status.txt
              exit 1
            fi
            
            # Check if Selenium tests failed
            if [ $? -ne 0 ] || grep -q "failures=\"[1-9][0-9]*\"" test-results/selenium/selenium_results.xml; then
              echo "Tests failing, executing rollback."
              echo "rollback" > ~/test_status.txt
            else
              echo "Tests are successful, no rollback required."
              echo "pass" > ~/test_status.txt
            fi
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: ~/
          paths:
            - test_status.txt
      - jira/notify:
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Test step completed. Status: ${CIRCLE_JOB}"

 rollback:
    working_directory: ~/Flask-calculator
    docker:
      - image: cimg/azure:2023.09
    steps:
      - attach_workspace:
          at: ~/workspace
      - checkout
      - aws-cli/setup
      - run:
          name: Azure Environment Setup
          command: |
            cat /etc/os-release
            sudo mkdir -p /var/lib/apt/lists/partial
            sudo chmod 755 /var/lib/apt/lists/partial
            sudo rm /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            # Install unzip
            sudo apt-get install -y unzip
      - run:
          name: Check Test Status and Rollback if Necessary
          command: |
            # Ensure the file exists and is readable
            if [ ! -f ~/workspace/test_status.txt ]; then
              echo "Test status file not found. Treating as a failure."
              TEST_STATUS="rollback"
            else
              TEST_STATUS=$(cat ~/workspace/test_status.txt)
            fi

            # Debug: Print the test status
            echo "Test Status: $TEST_STATUS"

            # Explicit check for rollback condition
            if [[ "$TEST_STATUS" == "rollback" ]]; then
              echo "Tests failed. Performing rollback..."
              
              # Download stable build from S3
              aws s3 cp s3://${S3_BUCKET_NAME}/Flask-calculator.zip ./original-stable-build.zip \
              || { echo "Failed to download stable build from S3"; exit 1; }
              
              # Install Azure CLI
              curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
              
              # Login to Azure
              az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
              az account set --subscription $AZURE_SUBSCRIPTION_ID
              
              # Configure Python runtime and startup command
              az webapp deployment source config-zip \
                -g $AZURE_RG_NAME \
                -n $AZURE_WEBAPP_NAME \
                --src ./original-stable-build.zip
              
              # Wait for configuration to apply
              sleep 30
              
              # Restart the webapp to ensure changes take effect
              az webapp restart \
                --resource-group $AZURE_RG_NAME \
                --name $AZURE_WEBAPP_NAME
              
              echo "Rollback deployment completed successfully."
              exit 0  # Explicitly fail the job to indicate a rollback
            else
              echo "Tests passed. No rollback needed."
              exit 0
            fi
      - jira/notify:
          pipeline_id: <<pipeline.id>>
          pipeline_number: <<pipeline.number>>
      - compass/notify_deployment:
          environment_type: production
      - ms-teams/report:
          only_on_fail: true
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Rollback step occurred"
          
workflows:
 build_and_test_deploy:
   jobs:
     - builds:
         context:
           - Jira
           - compass-integration-demotrundl
           - aws-credentials
           - teams
         post-steps:
           - compass/notify_deployment:
               environment_type: production
     - deploy:
         requires:
           - builds
         context:
           - Jira
           - compass-integration-demotrundl
           - aws-credentials
           - teams
         post-steps:
           - compass/notify_deployment:
               environment_type: production
     - run_tests:
         requires:
           - deploy
         context:
           - Jira
           - compass-integration-demotrundl
           - aws-credentials
           - teams
     - rollback:
         requires:
           - run_tests
         context:
           - Jira
           - compass-integration-demotrundl
           - aws-credentials
           - teams