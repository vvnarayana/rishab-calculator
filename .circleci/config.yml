version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-cli: circleci/aws-cli@2.0.3
  browser-tools: circleci/browser-tools@1.4.8
  jira: circleci/jira@2.1.0
  compass: atlassian-labs/compass@0.1.3
  ms-teams: opub/ms-teams-orb@1.0.3

executors:
  python-executor:
    docker:
      - image: cimg/python:3.9.9

jobs:
  builds:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install -r requirements.txt
          no_output_timeout: 10m
      - run:
          name: Build Script
          command: |
            chmod 777 build.sh
            ./build.sh
          no_output_timeout: 15m
      - run:
          name: Artifact Archiving
          command: |
            chmod 777 artifact.sh
            ./artifact.sh
      - store_artifacts:
          path: ~/Flask-calculator/Flask-calculator.zip
          destination: Flask-calculator.zip
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Build step completed. Status: ${CIRCLE_JOB}"

  deploy:
    docker:
      - image: cimg/azure:2023.09
    steps:
      - checkout
      - run:
          name: Azure App Service Deploy
          command: |
            chmod 777 artifact.sh
            ./artifact.sh
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
            az account set --subscription $AZURE_SUBSCRIPTION_ID
            az webapp deployment source config-zip -g $AZURE_RG_NAME -n $AZURE_WEBAPP_NAME --src *.zip
            az webapp up -n $AZURE_WEBAPP_NAME -g $AZURE_RG_NAME
          no_output_timeout: 20m
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Deploy step completed. Status: ${CIRCLE_JOB}"

  run_tests:
    docker:
      - image: "cimg/python:3.9.9-browsers"
    steps: 
      - checkout 
      - python/install-packages: 
          pkg-manager: pip
      - aws-cli/setup
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Run Unit Tests and Selenium Tests
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            mkdir -p test-results/pytest
            mkdir -p test-results/selenium
            
            pytest --junitxml=test-results/pytest/junit.xml tests/ || echo "Unit tests failed"
            
            cd /home/circleci/Flask-calculator/tests
            python selenium_driver_code.py || echo "Selenium tests failed"
            
            if [ ! -f test-results/selenium/selenium_results.xml ]; then
              echo "Selenium results file not found. This may indicate a problem with the test execution."
              echo "rollback" > ~/test_status.txt
            elif grep -q "failures=\"[1-9][0-9]*\"" test-results/selenium/selenium_results.xml || grep -q "failures=\"[1-9][0-9]*\"" test-results/pytest/junit.xml; then
              echo "Tests failed. Marking for rollback."
              echo "rollback" > ~/test_status.txt
            else
              echo "All tests passed."
              echo "pass" > ~/test_status.txt
            fi
          no_output_timeout: 30m
      - store_test_results:
          path: test-results
      - persist_to_workspace:
          root: ~/
          paths:
            - test_status.txt
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Test step completed. Status: ${CIRCLE_JOB}"

  rollback:
    docker:
      - image: cimg/azure:2023.09
    steps:
      - attach_workspace:
          at: ~/
      - aws-cli/setup
      - run:
          name: Check Test Status and Rollback if Necessary
          command: |
            if [[ $(cat ~/test_status.txt) == "rollback" ]]; then
              echo "Tests failed. Performing rollback..."
              
              if aws s3 cp s3://${S3_BUCKET_NAME}/Flask-calculator.zip ./stable-build.zip; then
                echo "Successfully downloaded stable build from S3"
              else
                echo "Failed to download stable build from S3"
                exit 1
              fi
              
              az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
              az account set --subscription $AZURE_SUBSCRIPTION_ID
              if az webapp deployment source config-zip -g $AZURE_RG_NAME -n $AZURE_WEBAPP_NAME --src stable-build.zip; then
                echo "Rollback completed successfully."
              else
                echo "Rollback failed."
                exit 1
              fi
            else
              echo "Tests passed. Skipping rollback process."
            fi
          no_output_timeout: 20m
      - ms-teams/report:
          only_on_fail: false
          webhook_url: $TEAMS_WEBHOOK_URL
          message: "Rollback step completed. Status: ${CIRCLE_JOB}"

workflows:
  build_and_test_deploy:
    jobs:
      - builds:
          context: 
            - Jira
            - compass-integration-venkatap
            - aws-credentials
            - teams
      - deploy:
          requires:
            - builds
          context: 
            - Jira
            - compass-integration-venkatap
            - aws-credentials
            - teams
      - run_tests:
          requires:
            - deploy
          context: 
            - Jira
            - compass-integration-venkatap
            - aws-credentials
            - teams
      - rollback:
          requires:
            - run_tests
          context: 
            - Jira
            - compass-integration-venkatap
            - aws-credentials
            - teams